<?xml version="1.0"?>
<robot name="wheebbot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- Including the parameters file -->
  <xacro:include filename="$(find wheebbot)/description/urdf/parameters.urdf.xacro" />

  <!-- Including the macros file -->
  <xacro:include filename="$(find wheebbot)/description/urdf/macros.urdf.xacro" />

  <!-- Including the materials file -->
  <!-- <xacro:include filename="$(find wheebbot)/description/urdf/materials.urdf.xacro" /> -->

  <!-- Including the gazebo related stuff -->
  <xacro:include filename="$(find wheebbot)/description/urdf/wheebbot.ign.xacro" />

  <link name="aux_link">
  </link>

  <link name="body">

    <!-- body visual -->
    <visual>
      <origin xyz="0 ${box_ly/2-leg_extrusion_l_edge/2} ${-(box_lz/2-leg_extrusion_l_edge/2)}" rpy="0 0 ${-pi/2}" />
      <geometry>
        <mesh filename="package://wheebbot/description/meshes/full_no_knee_no_wheels.dae" scale="1.0 1.0 1.0" />
      </geometry>
    </visual>

    <!-- box -->
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${box_lx} ${box_ly} ${box_lz}" />
        </geometry>
    </collision>

   <!-- top fan collision group-->
   <!-- fan-->
    <collision>
      <origin xyz="0 0 ${(box_lz/2+fan_vert_footprint/2)}" rpy="0 0 0"/>
        <geometry>
          <box size="${fan_edge_length} ${fan_edge_length} ${fan_vert_footprint}" />
        </geometry> 
    </collision>
    <!-- left door handle-->
    <collision>
      <origin xyz="0 ${box_ly/2-door_handle_width/2} ${(box_lz/2+door_handle_height2/2)}" rpy="0 0 0"/>
        <geometry>
          <box size="${door_handle_tot_lenght} ${door_handle_width} ${door_handle_height2}" />
        </geometry> 
    </collision>
    <collision>
      <origin xyz="0 ${box_ly/2-door_handle_width/2} ${(box_lz/2+door_handle_height2+(door_handle_tot_height-door_handle_height2)/2)}" rpy="0 0 0"/>
        <geometry>
          <box size="${door_handle_lenght2} ${door_handle_width} ${door_handle_tot_height-door_handle_height2}" />
        </geometry> 
    </collision>
    <!-- right door handle-->
    <collision>
       <origin xyz="0 ${-(box_ly/2-door_handle_width/2)} ${(box_lz/2+door_handle_height2/2)}" rpy="0 0 0"/>
         <geometry>
           <box size="${door_handle_tot_lenght} ${door_handle_width} ${door_handle_height2}" />
         </geometry> 
     </collision>
     <collision>
       <origin xyz="0 ${-(box_ly/2-door_handle_width/2)} ${(box_lz/2+door_handle_height2+(door_handle_tot_height-door_handle_height2)/2)}" rpy="0 0 0"/>
         <geometry>
           <box size="${door_handle_lenght2} ${door_handle_width} ${door_handle_tot_height-door_handle_height2}" />
         </geometry> 
     </collision>

    <!-- back fan collision -->
    <collision>
      <origin xyz="${-(box_lx/2+fan_vert_footprint/2)} 0 0" rpy="0 ${-pi/2} 0"/>
        <geometry>
          <box size="${fan_edge_length} ${fan_edge_length} ${fan_vert_footprint}" />
        </geometry> 
    </collision>
    
    <!-- left leg -->
    <collision>
      <origin xyz="${(leg_pos_wrt_box_back-box_lx/2)} ${box_ly/2-leg_extrusion_l_edge/2} ${-(box_lz/2+leg_length/2)}" rpy="0 0 0"/>
        <geometry>
          <box size="${leg_extrusion_l_edge} ${leg_extrusion_l_edge} ${leg_length}" />
        </geometry>
    </collision>
    <!-- left motor case -->
    <collision>
      <origin xyz="${(leg_pos_wrt_box_back-box_lx/2)} ${box_ly/2-motor_case_extension/2} ${-(box_lz/2+leg_length+motor_case_l_edge/2)}" rpy="0 0 0"/>
        <geometry>
          <box size="${motor_case_l_edge} ${motor_case_extension} ${motor_case_l_edge}" />
        </geometry>
    </collision>

    <!-- right leg -->
    <collision>
      <origin xyz="${(leg_pos_wrt_box_back-box_lx/2)} ${-(box_ly/2-leg_extrusion_l_edge/2)} ${-(box_lz/2+leg_length/2)}" rpy="0 0 0"/>
        <geometry>
          <box size="${leg_extrusion_l_edge} ${leg_extrusion_l_edge} ${leg_length}" />
        </geometry>
    </collision>
    <!-- right motor case -->
    <collision>
      <origin xyz="${(leg_pos_wrt_box_back-box_lx/2)} ${-(box_ly/2-motor_case_extension/2)} ${-(box_lz/2+leg_length+motor_case_l_edge/2)}" rpy="0 0 0"/>
        <geometry>
          <box size="${motor_case_l_edge} ${motor_case_extension} ${motor_case_l_edge}" />
        </geometry>
    </collision>
    
    <xacro:box_inertia mass="${pendulum_mass}" l_x="${pendulum_depth}" l_y="${pendulum_width}" l_z="${pendulum_length}">
      <origin xyz="${pendulum_length*sin(pendulum_CoM_pitch_offset)} 0 ${-(box_lz/2+leg_length+motor_case_l_edge/2)+pendulum_length*cos(pendulum_CoM_pitch_offset)}" rpy="0 ${pendulum_CoM_pitch_offset} 0"/>
    </xacro:box_inertia>

  </link>

  <link name="left_wheel">

    <!-- wheel visual -->
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${pi/2}" />
      <geometry>
        <mesh filename="package://wheebbot/description/meshes/wheel_black.dae" scale="1.0 1.0 1.0" />
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
    </collision>

    <xacro:disk_inertia mass="${wheel_mass}" radius="${wheel_radius}" height="${wheel_thickness}">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 0" />
    </xacro:disk_inertia>

  </link>
  
  <link name="right_wheel">

    <!-- wheel visual -->
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${-pi/2}" />
      <geometry>
        <mesh filename="package://wheebbot/description/meshes/wheel_black.dae" scale="1.0 1.0 1.0" />
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
    </collision>

    <xacro:disk_inertia mass="${wheel_mass}" radius="${wheel_radius}" height="${wheel_thickness}">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 0" />
    </xacro:disk_inertia >

  </link>

  <joint name="aux_joint" type="fixed">
    <origin xyz="0 0 ${(box_lz/2+leg_length+motor_case_l_edge/2+wheel_radius)}" rpy="0 0 0"/>
    <parent link="aux_link"/>
    <child link="body"/>
  </joint>

  <joint name="left_wheel_joint" type="continuous">
    <origin xyz="0 ${(wheels_interax/2)} ${-(box_lz/2+leg_length+motor_case_l_edge/2)}" rpy="0 0 0"/>
    <parent link="body"/>
    <child link="left_wheel"/>
    <axis xyz="0 1 0" /> 
    <dynamics damping="${wheel_joint_damping}" friction="${wheel_joint_static_friction}"/>
    <limit effort="${wheel_joint_effort_lim}" velocity="${wheel_joint_velocity_lim}" />
  </joint>

  <joint name="right_wheel_joint" type="continuous">
    <origin xyz="0 ${-(wheels_interax/2)} ${-(box_lz/2+leg_length+motor_case_l_edge/2)}" rpy="0 0 0"/>
    <parent link="body"/>
    <child link="right_wheel"/>
    <axis xyz="0 1 0" /> 
    <dynamics damping="${wheel_joint_damping}" friction="${wheel_joint_static_friction}"/>
    <limit effort="${wheel_joint_effort_lim}" velocity="${wheel_joint_velocity_lim}" />
  </joint>

</robot>